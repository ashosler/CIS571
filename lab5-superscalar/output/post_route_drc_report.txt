Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------
| Tool Version : Vivado v.2017.4 (lin64) Build 2086221 Fri Dec 15 20:54:30 MST 2017
| Date         : Mon Apr 25 13:36:50 2022
| Host         : big11.seas.upenn.edu running 64-bit openSUSE Leap 15.3
| Command      : report_drc -file ./output/post_route_drc_report.txt
| Design       : lc4_system
| Device       : xc7z020clg484-1
| Speed File   : -1
| Design State : Routed
------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: lc4_system
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 11
+---------+------------------+--------------------------+------------+
| Rule    | Severity         | Description              | Violations |
+---------+------------------+--------------------------+------------+
| LUTLP-1 | Critical Warning | Combinatorial Loop Alert | 2          |
| DPIP-1  | Warning          | Input pipelining         | 4          |
| DPOP-1  | Warning          | PREG Output pipelining   | 2          |
| DPOP-2  | Warning          | MREG Output pipelining   | 2          |
| ZPS7-1  | Warning          | PS7 block required       | 1          |
+---------+------------------+--------------------------+------------+

2. REPORT DETAILS
-----------------
LUTLP-1#1 Critical Warning
Combinatorial Loop Alert  
352 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is proc_inst/EXMEM_regfile_we_B/mul_result_13. Please evaluate your design. The cells in the loop are: proc_inst/EXMEM_regfile_we_B/mul_result_i_1__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_2__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_3__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_4__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_6__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_7__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_8__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_10__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_16__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_17, proc_inst/EXMEM_regfile_we_B/mul_result_i_18__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_19__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_21__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_22__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_24__0 (the first 15 of 352 listed).
Related violations: <none>

LUTLP-1#2 Critical Warning
Combinatorial Loop Alert  
379 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is proc_inst/MEMWB_regfile_we_B/mul_result_2. Please evaluate your design. The cells in the loop are: proc_inst/MEMWB_regfile_we_B/mul_result_i_1, proc_inst/MEMWB_regfile_we_B/mul_result_i_2, proc_inst/MEMWB_regfile_we_B/mul_result_i_3, proc_inst/EXMEM_rd_data_A/mul_result_i_4, proc_inst/MEMWB_regfile_we_B/mul_result_i_5, proc_inst/MEMWB_regfile_we_B/mul_result_i_6, proc_inst/EXMEM_rd_data_A/mul_result_i_7, proc_inst/MEMWB_regfile_we_B/mul_result_i_8, proc_inst/IDEX_is_load_A/mul_result_i_10, proc_inst/IDEX_pc_A/mul_result_i_16, proc_inst/EXMEM_regfile_we_B/mul_result_i_17__0, proc_inst/EXMEM_regfile_we_B/mul_result_i_18, proc_inst/EXMEM_regfile_we_B/mul_result_i_19, proc_inst/EXMEM_regfile_we_B/mul_result_i_20, proc_inst/EXMEM_regfile_we_B/mul_result_i_21 (the first 15 of 379 listed).
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP proc_inst/ALU_A/mul_result input proc_inst/ALU_A/mul_result/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP proc_inst/ALU_A/mul_result input proc_inst/ALU_A/mul_result/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP proc_inst/ALU_B/mul_result input proc_inst/ALU_B/mul_result/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP proc_inst/ALU_B/mul_result input proc_inst/ALU_B/mul_result/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP proc_inst/ALU_A/mul_result output proc_inst/ALU_A/mul_result/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP proc_inst/ALU_B/mul_result output proc_inst/ALU_B/mul_result/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP proc_inst/ALU_A/mul_result multiplier stage proc_inst/ALU_A/mul_result/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP proc_inst/ALU_B/mul_result multiplier stage proc_inst/ALU_B/mul_result/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

ZPS7-1#1 Warning
PS7 block required  
The PS7 cell must be used in this Zynq design in order to enable correct default configuration.
Related violations: <none>


